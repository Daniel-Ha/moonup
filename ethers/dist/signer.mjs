import{Signer as d}from"@ethersproject/abstract-signer";import{arrayify as g}from"@ethersproject/bytes";import{hashMessage as p}from"@ethersproject/hash";import{defineReadOnly as i}from"@ethersproject/properties";import{BigNumber as r}from"ethers";var e=class c extends d{constructor(n,o){super(),i(this,"_isSigner",!0),i(this,"provider",o),this.MoonSignerConfig=n,this.SDK=n.SDK}_signTypedData(n,o,t){throw new Error("Method not implemented.")}updateConfig(n){this.SDK=n.SDK,this.MoonSignerConfig=n}connect(n){return new c(this.MoonSignerConfig,n)}async signTypedData(n,o,t){return(await this.SDK.getAccountsSDK().signTypedData(this.MoonSignerConfig.address,{data:JSON.stringify({domain:n,types:o,value:t})}).then(s=>{if(!s.ok)throw new Error(s.statusText);return s.data.data})).signed_message||""}async getAddress(){return this.MoonSignerConfig.address}async signMessage(n){let o=new Uint8Array(g(p(n)));return(await this.SDK.getAccountsSDK().signMessage(this.MoonSignerConfig.address,{data:o.toString(),encoding:"utf-8"}).then(a=>{if(!a.ok)throw new Error(a.statusText);return a.data.data})).signed_message||""}async broadcastTransaction(n){let o=await this.SDK.getAccountsSDK().broadcastTx(this.MoonSignerConfig.address,{rawTransaction:n,chainId:this.MoonSignerConfig.chainId});if(!o.ok)throw new Error(o.statusText);return o.data.data.transaction_hash||""}async sendTransaction(n){let o=await this.populateTransaction(n);console.log("Moon::sendTransaction: populateTransaction",o);let t=await this.signTransaction(o);console.log("Moon::sendTransaction: signedRawTx",t);let a=await this.broadcastTransaction(t||"");console.log("Moon::sendTransaction: broadcastTx res",a);let s=await this.provider?.getTransaction(a||"");return console.log("Moon::sendTransaction: txResponse",s),s||{}}transactionRequestToInputBody(n){return{chain_id:r.from(n.chainId).toString(),data:n.data&&n.data?.toString()||"",to:n.to,gasPrice:r.from(n.gasPrice).toString(),gas:r.from(n.gasLimit).toString(),nonce:r.from(n.nonce).toString(),value:n.value!==void 0?r.from(n.value).toString():void 0,encoding:"utf-8"}}moonTransactionResponseToTransactions(n){return n.transactions||[]}async signTransaction(n){return await this.SDK.getAccountsSDK().signTransaction(this.MoonSignerConfig.address,this.transactionRequestToInputBody(n)).then(t=>{if(!t.ok)throw new Error(t.statusText);return this.moonTransactionResponseToTransactions(t.data.data)?.at(0)?.raw_transaction})||""}async getTypedDataDomain(n,o,t,a){return{name:n,version:o,chainId:t,verifyingContract:a}}async getTypedData(n,o,t){return{domain:n,types:o,message:t}}};export{e as MoonSigner};
//# sourceMappingURL=signer.mjs.map