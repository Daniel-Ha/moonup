import{EventEmitter as i}from"events";var e=[{chainId:"0x1",chainName:"Ethereum",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:["https://eth.llamarpc.com"],blockExplorerUrls:["https://etherscan.io/"]},{chainId:"0x89",chainName:"Polygon",nativeCurrency:{name:"Matic",symbol:"MATIC",decimals:18},rpcUrls:["https://polygon-rpc.com/"],blockExplorerUrls:["https://polygonscan.com/"]},{chainId:"0x38",chainName:"Binance Smart Chain",nativeCurrency:{name:"BNB",symbol:"BNB",decimals:18},rpcUrls:["https://bsc-dataseed.binance.org/"],blockExplorerUrls:["https://bscscan.com/"]},{chainId:"0xa86a",chainName:"Avalanche",nativeCurrency:{name:"AVAX",symbol:"AVAX",decimals:18},rpcUrls:["https://api.avax.network/ext/bc/C/rpc"],blockExplorerUrls:["https://cchain.explorer.avax.network/"]},{chainId:"0xfa",chainName:"Fantom",nativeCurrency:{name:"FTM",symbol:"FTM",decimals:18},rpcUrls:["https://rpc.ftm.tools"],blockExplorerUrls:["https://ftmscan.com/"]},{chainId:"0xa",chainName:"Optimism",nativeCurrency:{name:"Optimism",symbol:"OP",decimals:18},rpcUrls:["https://mainnet.optimism.io/"],blockExplorerUrls:["https://optimistic.etherscan.io/"]},{chainId:"0xa4b1",chainName:"Arbitrum",nativeCurrency:{name:"Arbitrum",symbol:"ARB",decimals:18},rpcUrls:["https://arb1.arbitrum.io/rpc"],blockExplorerUrls:["https://arbiscan.io/"]},{chainId:"0xa4ec",chainName:"Celo",nativeCurrency:{name:"Celo",symbol:"CELO",decimals:18},rpcUrls:["https://forno.celo.org"],blockExplorerUrls:["https://explorer.celo.org/"]},{chainId:"0x50877ed6",chainName:"SKALE",nativeCurrency:{name:"SKALE",symbol:"SKALE",decimals:18},rpcUrls:["https://staging-v3.skalenodes.com/v1/staging-aware-chief-gianfar"],blockExplorerUrls:["https://staging-aware-chief-gianfar.explorer.staging-v3.skalenodes.com/"]},{chainId:"0x52",chainName:"Meter",nativeCurrency:{name:"Meter",symbol:"MTR",decimals:18},rpcUrls:["https://rpc.meter.io"],blockExplorerUrls:["https://scan.meter.io"]},{chainId:"0x76b3",chainName:"Lightlink Pegasus Testnet",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:["https://replicator.pegasus.lightlink.io/rpc/v1"],blockExplorerUrls:["https://pegasus.lightlink.io/"]},{chainId:"0x76b2",chainName:"Lightlink Phoenix Mainnet",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:["https://replicator.phoenix.lightlink.io/rpc/v1"],blockExplorerUrls:["https://phoenix.lightlink.io/"]}];var r=class{constructor(t){this.isAuth=!1;this.storage=t,this.Events=new i,this.Events.on("updateToken",this.setToken.bind(this)),this.Events.on("updateRefreshToken",this.setRefreshToken.bind(this)),this.Events.on("updateEmail",this.setEmail.bind(this)),this.Events.on("updateExpiry",this.setExpiry.bind(this)),this.Events.on("updateWallet",this.setWallet.bind(this)),this.Events.on("updateNetwork",this.setNetwork.bind(this)),this.Events.on("logout",this.logout.bind(this)),this.Events.on("login",this.login.bind(this)),this.token="",this.refreshToken="",this.email="",this.expiry=0,this.wallet="",this.network=e[0],this.login()}getStorage(){return this.storage}setStorage(t){this.storage=t}getIsAuth(){return this.isAuth}setIsAuth(t){this.isAuth=t}emit(t,s){this.Events.emit(t,s)}login(){let t=this.storage.getItem();t&&this.LoadFromJson(t)}logout(){this.token="",this.refreshToken="",this.email="",this.expiry=0,this.wallet="",this.network=e[0],this.storage.removeItem(),this.isAuth=!1}LoadFromJson(t){this.token=t.token,this.refreshToken=t.refreshToken,this.email=t.email,this.expiry=t.expiry,this.wallet=t.wallet,this.network=t.network,this.token&&this.refreshToken&&this.expiry&&(this.isAuth=!0)}saveToStorage(){this.storage.setItem(this.ToJson())}ToJson(){return{token:this.token,refreshToken:this.refreshToken,email:this.email,expiry:this.expiry,wallet:this.wallet,network:this.network}}setToken(t){this.token=t,this.saveToStorage(),t&&(this.isAuth=!0)}getToken(){return this.token}setRefreshToken(t){this.refreshToken=t,this.saveToStorage()}getRefreshToken(){return this.refreshToken}setEmail(t){this.email=t,this.saveToStorage()}getEmail(){return this.email}setExpiry(t){this.expiry=t,this.saveToStorage()}getExpiry(){return this.expiry}setWallet(t){this.wallet=t,this.saveToStorage()}getWallet(){return this.wallet}setNetwork(t){this.network=t,this.saveToStorage()}getNetwork(){return this.network}};export{r as MoonAccount};
//# sourceMappingURL=account.mjs.map