{"version":3,"sources":["../src/account.ts","../src/chain.ts","../src/auth.ts","../src/storage.ts","../src/base.ts"],"sourcesContent":["import { EventEmitter } from 'events';\n\nimport { Chain, MOON_SUPPORTED_NETWORKS } from './chain';\nimport { MoonStorage } from './storage';\nexport interface MoonAccountInterface {\n  token: string;\n  refreshToken: string;\n  email: string;\n  expiry: number;\n  wallet: string;\n  network: Chain;\n}\nexport class MoonAccount {\n  token: string;\n  refreshToken: string;\n  email: string;\n  expiry: number;\n  wallet: string;\n  network: Chain;\n  storage: MoonStorage;\n  isAuth = false;\n  Events: EventEmitter;\n\n  constructor(storage: MoonStorage) {\n    this.storage = storage;\n    this.Events = new EventEmitter();\n\n    this.Events.on('updateToken', this.setToken.bind(this));\n    this.Events.on('updateRefreshToken', this.setRefreshToken.bind(this));\n    this.Events.on('updateEmail', this.setEmail.bind(this));\n    this.Events.on('updateExpiry', this.setExpiry.bind(this));\n    this.Events.on('updateWallet', this.setWallet.bind(this));\n    this.Events.on('updateNetwork', this.setNetwork.bind(this));\n    this.Events.on('logout', this.logout.bind(this));\n    this.Events.on('login', this.login.bind(this));\n\n    // set defaults\n    this.token = '';\n    this.refreshToken = '';\n    this.email = '';\n    this.expiry = 0;\n    this.wallet = '';\n    this.network = MOON_SUPPORTED_NETWORKS[0];\n    this.login();\n  }\n\n  // get storage\n  getStorage() {\n    return this.storage;\n  }\n\n  setStorage(storage: MoonStorage) {\n    this.storage = storage;\n  }\n\n  getIsAuth() {\n    return this.isAuth;\n  }\n\n  setIsAuth(isAuth: boolean) {\n    this.isAuth = isAuth;\n  }\n\n  emit(type: string, data: string) {\n    this.Events.emit(type, data);\n  }\n  login() {\n    const storedItem = this.storage.getItem();\n    if (storedItem) {\n      this.LoadFromJson(storedItem as MoonAccountInterface);\n    }\n  }\n  logout() {\n    this.token = '';\n    this.refreshToken = '';\n    this.email = '';\n    this.expiry = 0;\n    this.wallet = '';\n    this.network = MOON_SUPPORTED_NETWORKS[0];\n    this.storage.removeItem();\n    this.isAuth = false;\n  }\n  LoadFromJson(json: MoonAccountInterface) {\n    this.token = json.token;\n    this.refreshToken = json.refreshToken;\n    this.email = json.email;\n    this.expiry = json.expiry;\n    this.wallet = json.wallet;\n    this.network = json.network;\n    if (this.token && this.refreshToken && this.expiry) {\n      this.isAuth = true;\n    }\n  }\n\n  saveToStorage() {\n    this.storage.setItem(this.ToJson());\n  }\n\n  ToJson(): MoonAccountInterface {\n    return {\n      token: this.token,\n      refreshToken: this.refreshToken,\n      email: this.email,\n      expiry: this.expiry,\n      wallet: this.wallet,\n      network: this.network,\n    };\n  }\n\n  // add setters and getters\n  setToken(token: string) {\n    this.token = token;\n    this.saveToStorage();\n    if (token) {\n      this.isAuth = true;\n    }\n  }\n\n  getToken() {\n    return this.token;\n  }\n\n  setRefreshToken(refreshToken: string) {\n    this.refreshToken = refreshToken;\n    this.saveToStorage();\n  }\n\n  getRefreshToken() {\n    return this.refreshToken;\n  }\n\n  setEmail(email: string) {\n    this.email = email;\n    this.saveToStorage();\n  }\n\n  getEmail() {\n    return this.email;\n  }\n\n  setExpiry(expiry: number) {\n    this.expiry = expiry;\n    this.saveToStorage();\n  }\n\n  getExpiry() {\n    return this.expiry;\n  }\n\n  setWallet(wallet: string) {\n    this.wallet = wallet;\n    this.saveToStorage();\n  }\n\n  getWallet() {\n    return this.wallet;\n  }\n\n  setNetwork(network: Chain) {\n    this.network = network;\n    this.saveToStorage();\n  }\n\n  getNetwork() {\n    return this.network;\n  }\n}\n","export interface Chain {\n  chainId: string;\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string;\n    decimals: number;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls: string[];\n}\n\nexport const MOON_SUPPORTED_NETWORKS: Chain[] = [\n  {\n    chainId: '0x1',\n    chainName: 'Ethereum',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18,\n    },\n    rpcUrls: ['https://eth.llamarpc.com'],\n    blockExplorerUrls: ['https://etherscan.io/'],\n  },\n  {\n    chainId: '0x89',\n    chainName: 'Polygon',\n    nativeCurrency: {\n      name: 'Matic',\n      symbol: 'MATIC',\n      decimals: 18,\n    },\n    rpcUrls: ['https://polygon-rpc.com/'],\n    blockExplorerUrls: ['https://polygonscan.com/'],\n  },\n\n  {\n    chainId: '0x38',\n    chainName: 'Binance Smart Chain',\n    nativeCurrency: {\n      name: 'BNB',\n      symbol: 'BNB',\n      decimals: 18,\n    },\n    rpcUrls: ['https://bsc-dataseed.binance.org/'],\n    blockExplorerUrls: ['https://bscscan.com/'],\n  },\n  {\n    chainId: '0xa86a',\n    chainName: 'Avalanche',\n    nativeCurrency: {\n      name: 'AVAX',\n      symbol: 'AVAX',\n      decimals: 18,\n    },\n    rpcUrls: ['https://api.avax.network/ext/bc/C/rpc'],\n    blockExplorerUrls: ['https://cchain.explorer.avax.network/'],\n  },\n\n  {\n    chainId: '0xfa',\n    chainName: 'Fantom',\n    nativeCurrency: {\n      name: 'FTM',\n      symbol: 'FTM',\n      decimals: 18,\n    },\n    rpcUrls: ['https://rpc.ftm.tools'],\n    blockExplorerUrls: ['https://ftmscan.com/'],\n  },\n  {\n    chainId: '0xa',\n    chainName: 'Optimism',\n    nativeCurrency: {\n      name: 'Optimism',\n      symbol: 'OP',\n      decimals: 18,\n    },\n    rpcUrls: ['https://mainnet.optimism.io/'],\n    blockExplorerUrls: ['https://optimistic.etherscan.io/'],\n  },\n  // arbitrum\n  {\n    chainId: '0xa4b1',\n    chainName: 'Arbitrum',\n    nativeCurrency: {\n      name: 'Arbitrum',\n      symbol: 'ARB',\n      decimals: 18,\n    },\n    rpcUrls: ['https://arb1.arbitrum.io/rpc'],\n    blockExplorerUrls: ['https://arbiscan.io/'],\n  },\n  // celo\n  {\n    chainId: '0xa4ec',\n    chainName: 'Celo',\n    nativeCurrency: {\n      name: 'Celo',\n      symbol: 'CELO',\n      decimals: 18,\n    },\n    rpcUrls: ['https://forno.celo.org'],\n    blockExplorerUrls: ['https://explorer.celo.org/'],\n  },\n\n  // skale\n  {\n    chainId: '0x50877ed6',\n    chainName: 'SKALE',\n    nativeCurrency: {\n      name: 'SKALE',\n      symbol: 'SKALE',\n      decimals: 18,\n    },\n    rpcUrls: [\n      'https://staging-v3.skalenodes.com/v1/staging-aware-chief-gianfar',\n    ],\n    blockExplorerUrls: [\n      'https://staging-aware-chief-gianfar.explorer.staging-v3.skalenodes.com/',\n    ],\n  },\n  // MTR\n  {\n    // 82 to big number\n    chainId: '0x52',\n    chainName: 'Meter',\n    nativeCurrency: {\n      name: 'Meter',\n      symbol: 'MTR',\n      decimals: 18,\n    },\n    rpcUrls: ['https://rpc.meter.io'],\n    blockExplorerUrls: ['https://scan.meter.io'],\n  },\n  //lightlink peggy testnet\n  {\n    // 1891 to big number\n    chainId: '0x76b3',\n    chainName: 'Lightlink Pegasus Testnet',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18,\n    },\n    rpcUrls: ['https://replicator.pegasus.lightlink.io/rpc/v1'],\n    blockExplorerUrls: ['https://pegasus.lightlink.io/'],\n  },\n\n  // light link phoenix mainnet\n  {\n    // 1890 to big number\n    chainId: '0x76b2',\n    chainName: 'Lightlink Phoenix Mainnet',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18,\n    },\n    rpcUrls: ['https://replicator.phoenix.lightlink.io/rpc/v1'],\n    blockExplorerUrls: ['https://phoenix.lightlink.io/'],\n  },\n];\n\n// chainId number or string to rpcUrls\n// input chainId number or string\n// output rpcUrls string[]\nexport const getRpcUrls = (chainId: string | number): string[] => {\n  // if number convert to big number\n  if (typeof chainId === 'number') {\n    chainId = chainId.toString(16);\n  }\n  const network = MOON_SUPPORTED_NETWORKS.find(\n    (network) => network.chainId === chainId\n  );\n  return network ? network.rpcUrls : [];\n};\n\n// chainId to chain\n// input chainId number or string\n// output chain object\nexport const getChain = (chainId: string | number): Chain | undefined => {\n  // if number convert to big number\n  if (typeof chainId === 'number') {\n    chainId = chainId.toString(16);\n  }\n  return MOON_SUPPORTED_NETWORKS.find((network) => network.chainId === chainId);\n};\n","export enum AUTH {\n  OAUTH2 = 'oauth2',\n  JWT = 'bearer',\n  X_API_KEY = 'x-api-key',\n}\n","import { MoonAccountInterface } from './account';\nexport enum Storage {\n  LOCAL = 'local',\n  SESSION = 'session',\n}\nexport const MOON_SESSION_KEY = 'MoonSessionKey';\nexport class MoonStorage {\n  type: Storage;\n  key: string;\n\n  constructor(type: Storage, key: string) {\n    this.type = type;\n    this.key = key;\n  }\n\n  setItem(account: MoonAccountInterface): void {\n    let _storage: globalThis.Storage;\n    switch (this.type) {\n      case Storage.LOCAL:\n        _storage = window.localStorage;\n        break;\n      case Storage.SESSION:\n        _storage = window.sessionStorage;\n        break;\n      default:\n        _storage = window.localStorage;\n        break;\n    }\n    _storage.setItem(this.key, JSON.stringify(account));\n  }\n\n  getItem(): MoonAccountInterface | null {\n    let _storage: globalThis.Storage;\n    switch (this.type) {\n      case Storage.LOCAL:\n        _storage = window.localStorage;\n        break;\n      case Storage.SESSION:\n        _storage = window.sessionStorage;\n        break;\n      default:\n        _storage = window.localStorage;\n        break;\n    }\n    const key = _storage.getItem(this.key);\n    try {\n      if (!key) {\n        return null;\n      }\n      return JSON.parse(key || '{}') as MoonAccountInterface;\n    } catch (error) {\n      console.error('Error parsing JSON from storage:', error);\n      return null;\n    }\n  }\n\n  removeItem(): void {\n    let _storage: globalThis.Storage;\n    switch (this.type) {\n      case Storage.LOCAL:\n        _storage = window.localStorage;\n        break;\n      case Storage.SESSION:\n        _storage = window.sessionStorage;\n        break;\n      default:\n        _storage = window.localStorage;\n        break;\n    }\n    _storage.removeItem(this.key);\n  }\n}\n","import { AUTH } from './auth';\nimport { MOON_SUPPORTED_NETWORKS } from './chain';\nimport { MoonSDKConfig } from './config';\nimport { MOON_SESSION_KEY, MoonStorage, Storage } from './storage';\n\nexport const baseConfig: MoonSDKConfig = {\n  Auth: {\n    type: AUTH.JWT,\n  },\n  Storage: new MoonStorage(Storage.LOCAL, MOON_SESSION_KEY),\n  Networks: MOON_SUPPORTED_NETWORKS,\n};\n"],"mappings":"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","names":["EventEmitter","MOON_SUPPORTED_NETWORKS","getRpcUrls","chainId","network","getChain","MoonAccount","storage","EventEmitter","MOON_SUPPORTED_NETWORKS","isAuth","type","data","storedItem","json","token","refreshToken","email","expiry","wallet","network","AUTH","Storage","MOON_SESSION_KEY","MoonStorage","type","key","account","_storage","error","baseConfig","MoonStorage","MOON_SESSION_KEY","MOON_SUPPORTED_NETWORKS"]}