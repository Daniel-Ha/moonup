{"version":3,"sources":["../src/chain.ts"],"sourcesContent":["export interface Chain {\n  chainId: string;\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string;\n    decimals: number;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls: string[];\n}\n\nexport const MOON_SUPPORTED_NETWORKS: Chain[] = [\n  {\n    chainId: '0x1',\n    chainName: 'Ethereum',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18,\n    },\n    rpcUrls: ['https://eth.llamarpc.com'],\n    blockExplorerUrls: ['https://etherscan.io/'],\n  },\n  {\n    chainId: '0x89',\n    chainName: 'Polygon',\n    nativeCurrency: {\n      name: 'Matic',\n      symbol: 'MATIC',\n      decimals: 18,\n    },\n    rpcUrls: ['https://polygon-rpc.com/'],\n    blockExplorerUrls: ['https://polygonscan.com/'],\n  },\n\n  {\n    chainId: '0x38',\n    chainName: 'Binance Smart Chain',\n    nativeCurrency: {\n      name: 'BNB',\n      symbol: 'BNB',\n      decimals: 18,\n    },\n    rpcUrls: ['https://bsc-dataseed.binance.org/'],\n    blockExplorerUrls: ['https://bscscan.com/'],\n  },\n  {\n    chainId: '0xa86a',\n    chainName: 'Avalanche',\n    nativeCurrency: {\n      name: 'AVAX',\n      symbol: 'AVAX',\n      decimals: 18,\n    },\n    rpcUrls: ['https://api.avax.network/ext/bc/C/rpc'],\n    blockExplorerUrls: ['https://cchain.explorer.avax.network/'],\n  },\n\n  {\n    chainId: '0xfa',\n    chainName: 'Fantom',\n    nativeCurrency: {\n      name: 'FTM',\n      symbol: 'FTM',\n      decimals: 18,\n    },\n    rpcUrls: ['https://rpc.ftm.tools'],\n    blockExplorerUrls: ['https://ftmscan.com/'],\n  },\n  {\n    chainId: '0xa',\n    chainName: 'Optimism',\n    nativeCurrency: {\n      name: 'Optimism',\n      symbol: 'OP',\n      decimals: 18,\n    },\n    rpcUrls: ['https://mainnet.optimism.io/'],\n    blockExplorerUrls: ['https://optimistic.etherscan.io/'],\n  },\n  // arbitrum\n  {\n    chainId: '0xa4b1',\n    chainName: 'Arbitrum',\n    nativeCurrency: {\n      name: 'Arbitrum',\n      symbol: 'ARB',\n      decimals: 18,\n    },\n    rpcUrls: ['https://arb1.arbitrum.io/rpc'],\n    blockExplorerUrls: ['https://arbiscan.io/'],\n  },\n  // celo\n  {\n    chainId: '0xa4ec',\n    chainName: 'Celo',\n    nativeCurrency: {\n      name: 'Celo',\n      symbol: 'CELO',\n      decimals: 18,\n    },\n    rpcUrls: ['https://forno.celo.org'],\n    blockExplorerUrls: ['https://explorer.celo.org/'],\n  },\n\n  // skale\n  {\n    chainId: '0x50877ed6',\n    chainName: 'SKALE',\n    nativeCurrency: {\n      name: 'SKALE',\n      symbol: 'SKALE',\n      decimals: 18,\n    },\n    rpcUrls: [\n      'https://staging-v3.skalenodes.com/v1/staging-aware-chief-gianfar',\n    ],\n    blockExplorerUrls: [\n      'https://staging-aware-chief-gianfar.explorer.staging-v3.skalenodes.com/',\n    ],\n  },\n  // MTR\n  {\n    // 82 to big number\n    chainId: '0x52',\n    chainName: 'Meter',\n    nativeCurrency: {\n      name: 'Meter',\n      symbol: 'MTR',\n      decimals: 18,\n    },\n    rpcUrls: ['https://rpc.meter.io'],\n    blockExplorerUrls: ['https://scan.meter.io'],\n  },\n  //lightlink peggy testnet\n  {\n    // 1891 to big number\n    chainId: '0x76b3',\n    chainName: 'Lightlink Pegasus Testnet',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18,\n    },\n    rpcUrls: ['https://replicator.pegasus.lightlink.io/rpc/v1'],\n    blockExplorerUrls: ['https://pegasus.lightlink.io/'],\n  },\n\n  // light link phoenix mainnet\n  {\n    // 1890 to big number\n    chainId: '0x76b2',\n    chainName: 'Lightlink Phoenix Mainnet',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18,\n    },\n    rpcUrls: ['https://replicator.phoenix.lightlink.io/rpc/v1'],\n    blockExplorerUrls: ['https://phoenix.lightlink.io/'],\n  },\n];\n\n// chainId number or string to rpcUrls\n// input chainId number or string\n// output rpcUrls string[]\nexport const getRpcUrls = (chainId: string | number): string[] => {\n  // if number convert to big number\n  if (typeof chainId === 'number') {\n    chainId = chainId.toString(16);\n  }\n  const network = MOON_SUPPORTED_NETWORKS.find(\n    (network) => network.chainId === chainId\n  );\n  return network ? network.rpcUrls : [];\n};\n\n// chainId to chain\n// input chainId number or string\n// output chain object\nexport const getChain = (chainId: string | number): Chain | undefined => {\n  // if number convert to big number\n  if (typeof chainId === 'number') {\n    chainId = chainId.toString(16);\n  }\n  return MOON_SUPPORTED_NETWORKS.find((network) => network.chainId === chainId);\n};\n"],"mappings":"AAYO,IAAMA,EAAmC,CAC9C,CACE,QAAS,MACT,UAAW,WACX,eAAgB,CACd,KAAM,QACN,OAAQ,MACR,SAAU,EACZ,EACA,QAAS,CAAC,0BAA0B,EACpC,kBAAmB,CAAC,uBAAuB,CAC7C,EACA,CACE,QAAS,OACT,UAAW,UACX,eAAgB,CACd,KAAM,QACN,OAAQ,QACR,SAAU,EACZ,EACA,QAAS,CAAC,0BAA0B,EACpC,kBAAmB,CAAC,0BAA0B,CAChD,EAEA,CACE,QAAS,OACT,UAAW,sBACX,eAAgB,CACd,KAAM,MACN,OAAQ,MACR,SAAU,EACZ,EACA,QAAS,CAAC,mCAAmC,EAC7C,kBAAmB,CAAC,sBAAsB,CAC5C,EACA,CACE,QAAS,SACT,UAAW,YACX,eAAgB,CACd,KAAM,OACN,OAAQ,OACR,SAAU,EACZ,EACA,QAAS,CAAC,uCAAuC,EACjD,kBAAmB,CAAC,uCAAuC,CAC7D,EAEA,CACE,QAAS,OACT,UAAW,SACX,eAAgB,CACd,KAAM,MACN,OAAQ,MACR,SAAU,EACZ,EACA,QAAS,CAAC,uBAAuB,EACjC,kBAAmB,CAAC,sBAAsB,CAC5C,EACA,CACE,QAAS,MACT,UAAW,WACX,eAAgB,CACd,KAAM,WACN,OAAQ,KACR,SAAU,EACZ,EACA,QAAS,CAAC,8BAA8B,EACxC,kBAAmB,CAAC,kCAAkC,CACxD,EAEA,CACE,QAAS,SACT,UAAW,WACX,eAAgB,CACd,KAAM,WACN,OAAQ,MACR,SAAU,EACZ,EACA,QAAS,CAAC,8BAA8B,EACxC,kBAAmB,CAAC,sBAAsB,CAC5C,EAEA,CACE,QAAS,SACT,UAAW,OACX,eAAgB,CACd,KAAM,OACN,OAAQ,OACR,SAAU,EACZ,EACA,QAAS,CAAC,wBAAwB,EAClC,kBAAmB,CAAC,4BAA4B,CAClD,EAGA,CACE,QAAS,aACT,UAAW,QACX,eAAgB,CACd,KAAM,QACN,OAAQ,QACR,SAAU,EACZ,EACA,QAAS,CACP,kEACF,EACA,kBAAmB,CACjB,yEACF,CACF,EAEA,CAEE,QAAS,OACT,UAAW,QACX,eAAgB,CACd,KAAM,QACN,OAAQ,MACR,SAAU,EACZ,EACA,QAAS,CAAC,sBAAsB,EAChC,kBAAmB,CAAC,uBAAuB,CAC7C,EAEA,CAEE,QAAS,SACT,UAAW,4BACX,eAAgB,CACd,KAAM,QACN,OAAQ,MACR,SAAU,EACZ,EACA,QAAS,CAAC,gDAAgD,EAC1D,kBAAmB,CAAC,+BAA+B,CACrD,EAGA,CAEE,QAAS,SACT,UAAW,4BACX,eAAgB,CACd,KAAM,QACN,OAAQ,MACR,SAAU,EACZ,EACA,QAAS,CAAC,gDAAgD,EAC1D,kBAAmB,CAAC,+BAA+B,CACrD,CACF,EAKaC,EAAcC,GAAuC,CAE5D,OAAOA,GAAY,WACrBA,EAAUA,EAAQ,SAAS,EAAE,GAE/B,IAAMC,EAAUH,EAAwB,KACrCG,GAAYA,EAAQ,UAAYD,CACnC,EACA,OAAOC,EAAUA,EAAQ,QAAU,CAAC,CACtC,EAKaC,EAAYF,IAEnB,OAAOA,GAAY,WACrBA,EAAUA,EAAQ,SAAS,EAAE,GAExBF,EAAwB,KAAMG,GAAYA,EAAQ,UAAYD,CAAO","names":["MOON_SUPPORTED_NETWORKS","getRpcUrls","chainId","network","getChain"]}