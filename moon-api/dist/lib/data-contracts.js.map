{"version":3,"sources":["../../src/lib/data-contracts.ts"],"sourcesContent":["/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n\nexport interface GetSwapDto {\n  src: string;\n  dst: string;\n  amount: string;\n  from: string;\n  /** @format double */\n  slippage: number;\n  protocols?: string;\n  fee?: string;\n  disableEstimate?: boolean;\n  permit?: string;\n  includeTokensInfo?: boolean;\n  includeProtocols?: boolean;\n  compatibility?: boolean;\n  allowPartialFill?: boolean;\n  parts?: string;\n  mainRouteParts?: string;\n  connectorTokens?: string;\n  complexityLevel?: string;\n  gasLimit?: string;\n  gasPrice?: string;\n  referrer?: string;\n  receiver?: string;\n  /** @format double */\n  chainId?: number;\n}\n\nexport interface NonceResponse {\n  /** @format double */\n  nonce: number;\n}\n\nexport interface BalanceResponse {\n  balance: string;\n}\n\nexport interface Tx {\n  /** @format double */\n  type?: number;\n  /** @format double */\n  chain_id?: number;\n  data?: string;\n  gas?: string;\n  gas_price?: string;\n  gas_tip_cap?: string | null;\n  gas_fee_cap?: string | null;\n  value?: string;\n  /** @format double */\n  nonce?: number;\n  from?: string;\n  to?: string | null;\n  blob_gas?: string | null;\n  blob_gas_fee_cap?: string | null;\n  blob_hashes?: string[] | null;\n  v?: string;\n  r?: string;\n  s?: string;\n}\n\nexport interface TransactionRequest {\n  nonce?: string;\n  data?: string;\n  value?: string;\n  to?: string;\n  from?: string;\n  maxFeePerGas?: string;\n  maxPriorityFeePerGas?: string;\n}\n\nexport interface TransactionData {\n  moon_scan_url?: string;\n  transaction_hash: string;\n  signed_transaction: string;\n  signed_message?: string;\n  raw_transaction?: string;\n  signature?: string;\n  transaction?: Tx;\n  userOps?: TransactionRequest[];\n  userop_transaction?: string;\n}\n\nexport interface Transaction {\n  userop_transaction?: string;\n  userOps?: TransactionRequest[];\n  transaction?: Tx;\n  signature?: string;\n  moon_scan_url?: string;\n  transactions?: TransactionData[];\n  data?: string | null;\n  raw_transaction?: string;\n  signed_transaction?: string;\n  transaction_hash?: string;\n}\n\nexport interface AccountResponse {\n  keys?: string[];\n  address?: string;\n}\n\nexport interface SignMessage {\n  name?: string;\n  data: string;\n  encoding?: string;\n  header?: boolean;\n  signtype?: boolean;\n}\n\nexport interface EnsResolveResponse {\n  address: string;\n}\n\nexport interface ENSReverseResolveResponse {\n  domain: string;\n}\n\nexport interface AaveReservesData {\n  current_atoken_balance: string;\n  current_borrow_balance: string;\n  principal_borrow_balance: string;\n  borrow_rate_mode: string;\n  borrow_rate: string;\n  liquidity_rate: string;\n  origination_fee: string;\n  variable_borrow_index: string;\n  last_update_timestamp: string;\n  usage_as_collateral_enabled: string;\n}\n\nexport interface Erc20Response {\n  /** @format double */\n  type?: number;\n  /** @format double */\n  chain_id?: number;\n  data?: string;\n  gas?: string;\n  gas_price?: string;\n  gas_tip_cap?: string | null;\n  gas_fee_cap?: string | null;\n  value?: string;\n  /** @format double */\n  nonce?: number;\n  from?: string;\n  to?: string | null;\n  blob_gas?: string | null;\n  blob_gas_fee_cap?: string | null;\n  blob_hashes?: string[] | null;\n  v?: string;\n  r?: string;\n  s?: string;\n  name?: string;\n  symbol?: string;\n  decimals?: string;\n  totalSupply?: string;\n  contract_address?: string;\n  balanceOf?: string;\n  allowance?: string;\n}\n\nexport interface Erc1155Response {\n  /** @format double */\n  type?: number;\n  /** @format double */\n  chain_id?: number;\n  data?: string;\n  gas?: string;\n  gas_price?: string;\n  gas_tip_cap?: string | null;\n  gas_fee_cap?: string | null;\n  value?: string;\n  /** @format double */\n  nonce?: number;\n  from?: string;\n  to?: string | null;\n  blob_gas?: string | null;\n  blob_gas_fee_cap?: string | null;\n  blob_hashes?: string[] | null;\n  v?: string;\n  r?: string;\n  s?: string;\n  balance_of?: string;\n  balance_of_batch?: string;\n}\n\nexport interface BroadCastRawTransactionResponse {\n  success: boolean;\n  message: string;\n  data: string;\n}\n\nexport interface BitcoinTransactionOutput {\n  signedTx?: string;\n  transaction_hash?: string;\n}\n\nexport interface Erc721Response {\n  /** @format double */\n  type?: number;\n  /** @format double */\n  chain_id?: number;\n  data?: string;\n  gas?: string;\n  gas_price?: string;\n  gas_tip_cap?: string | null;\n  gas_fee_cap?: string | null;\n  value?: string;\n  /** @format double */\n  nonce?: number;\n  from?: string;\n  to?: string | null;\n  blob_gas?: string | null;\n  blob_gas_fee_cap?: string | null;\n  blob_hashes?: string[] | null;\n  v?: string;\n  r?: string;\n  s?: string;\n  name?: string;\n  symbol?: string;\n  balance_of?: string;\n  owner_of?: string;\n  token_uri?: string;\n  contract_address?: string;\n  isApprovedForAll?: string;\n}\n\nexport interface AccountControllerResponse {\n  data?:\n    | NonceResponse\n    | BalanceResponse\n    | Transaction\n    | AccountResponse\n    | SignMessage\n    | EnsResolveResponse\n    | ENSReverseResolveResponse\n    | AaveReservesData\n    | Erc20Response\n    | Erc1155Response\n    | BroadCastRawTransactionResponse\n    | BitcoinTransactionOutput\n    | Erc721Response;\n  success?: boolean;\n  message?: string;\n}\n\nexport interface InputBody {\n  to?: string;\n  data?: string;\n  input?: string;\n  value?: string;\n  nonce?: string;\n  gas?: string;\n  gasPrice?: string;\n  chain_id?: string;\n  encoding?: string;\n  EOA?: boolean;\n  contract_address?: string;\n  token_id?: string;\n  token_ids?: string;\n  approved?: boolean;\n  broadcast?: boolean;\n}\n\nexport interface SignTypedData {\n  data: string;\n}\n\nexport interface CreateAccountInput {\n  private_key?: string;\n}\n\nexport interface DeployInput {\n  chain_id?: string;\n  abi: string;\n  bytecode: string;\n  constructor_args?: string;\n}\n\nexport interface BroadcastInput {\n  chainId: string;\n  rawTransaction: string;\n}\n\nexport interface AaveInput {\n  to?: string;\n  data?: string;\n  input?: string;\n  value?: string;\n  nonce?: string;\n  gas?: string;\n  gasPrice?: string;\n  chain_id?: string;\n  encoding?: string;\n  EOA?: boolean;\n  contract_address?: string;\n  token_id?: string;\n  token_ids?: string;\n  approved?: boolean;\n  broadcast?: boolean;\n  lending_pool?: string;\n  amount?: string;\n  atoken_to_redeeem?: string;\n  ref_code?: string;\n  interest_rate_mode?: string;\n}\n\nexport interface BitcoinInput {\n  network?: string;\n  private_key?: string;\n}\n\nexport interface BitcoinTransactionInput {\n  to?: string;\n  /** @format double */\n  value?: number;\n  network?: string;\n  compress?: boolean;\n}\n\nexport interface BitcoinCashInput {\n  network?: string;\n  private_key?: string;\n}\n\nexport interface BitcoinCashTransactionInput {\n  to?: string;\n  /** @format double */\n  value?: number;\n  network?: string;\n  compress?: boolean;\n}\n\nexport interface TransactionResponse {\n  message: string;\n  tx: {\n    data: string;\n    value: string;\n    /** @format double */\n    nonce: number;\n    gas: string;\n    to: string;\n    from: string;\n  };\n  info: {\n    conveyorGas: string;\n    affiliateGas: string;\n    affiliateAggregator: string;\n    amountOut: string;\n    amountOutMin: string;\n  };\n  /** @format double */\n  chainId: number;\n  /** @format double */\n  currentBlockNumber: number;\n}\n\nexport interface ConveyorFinanceControllerResponse {\n  input?: InputBody;\n  convey?: TransactionResponse;\n  data?: TransactionData;\n  tx?: {\n    data: string;\n    value: string;\n    /** @format double */\n    nonce: number;\n    gas: string;\n    to: string;\n    from: string;\n  };\n  signed?: Transaction;\n  success: boolean;\n  message: string;\n}\n\nexport interface TokenSwapParams {\n  to?: string;\n  data?: string;\n  input?: string;\n  value?: string;\n  nonce?: string;\n  gas?: string;\n  gasPrice?: string;\n  chain_id?: string;\n  encoding?: string;\n  EOA?: boolean;\n  contract_address?: string;\n  token_id?: string;\n  token_ids?: string;\n  approved?: boolean;\n  broadcast?: boolean;\n  tokenIn: string;\n  tokenOut: string;\n  /** @format double */\n  tokenInDecimals: number;\n  /** @format double */\n  tokenOutDecimals: number;\n  amountIn: string;\n  slippage: string;\n  recipient: string;\n  referrer: string;\n}\n\nexport interface CosmosInput {\n  network?: string;\n  private_key?: string;\n}\n\nexport interface CosmosTransactionInput {\n  to?: string;\n  /** @format double */\n  value?: number;\n  network?: string;\n  compress?: boolean;\n}\n\nexport interface DogeCoinInput {\n  network?: string;\n  private_key?: string;\n}\n\nexport interface DogeCoinTransactionInput {\n  to?: string;\n  /** @format double */\n  value?: number;\n  network?: string;\n  compress?: boolean;\n}\n\nexport interface EnsResolveInput {\n  domain: string;\n  chain_id: string;\n}\n\nexport interface EosInput {\n  network?: string;\n  private_key?: string;\n}\n\nexport interface EosTransactionInput {\n  to?: string;\n  /** @format double */\n  value?: number;\n  network?: string;\n  compress?: boolean;\n}\n\nexport interface Erc1155Request {\n  to?: string;\n  data?: string;\n  input?: string;\n  value?: string;\n  nonce?: string;\n  gas?: string;\n  gasPrice?: string;\n  chain_id?: string;\n  encoding?: string;\n  EOA?: boolean;\n  contract_address?: string;\n  token_id?: string;\n  token_ids?: string;\n  approved?: boolean;\n  broadcast?: boolean;\n}\n\nexport interface Erc721Request {\n  to?: string;\n  data?: string;\n  input?: string;\n  value?: string;\n  nonce?: string;\n  gas?: string;\n  gasPrice?: string;\n  chain_id?: string;\n  encoding?: string;\n  EOA?: boolean;\n  contract_address?: string;\n  token_id?: string;\n  token_ids?: string;\n  approved?: boolean;\n  broadcast?: boolean;\n}\n\nexport interface LitecoinInput {\n  network?: string;\n  private_key?: string;\n}\n\nexport interface LitecoinTransactionInput {\n  to?: string;\n  /** @format double */\n  value?: number;\n  network?: string;\n  compress?: boolean;\n}\n\nexport interface CryptoCurrency {\n  networkDisplayName: string;\n  icon: string;\n  /** @format double */\n  chainId: number;\n  address: string;\n  /** @format double */\n  decimals: number;\n  network: string;\n  symbol: string;\n  name: string;\n  code: string;\n  id: string;\n}\n\nexport interface FiatCurrency {\n  icon: string;\n  symbol: string;\n  name: string;\n  code: string;\n  id: string;\n}\n\nexport interface Message {\n  fiat: FiatCurrency[];\n  crypto: CryptoCurrency[];\n}\n\nexport interface SupportedCurrenciesResponse {\n  message: Message;\n}\n\nexport interface PaymentType {\n  icon: string;\n  name: string;\n  paymentTypeId: string;\n}\n\nexport interface SupportedPaymentTypesMessage {\n  googlepay: PaymentType;\n  applepay: PaymentType;\n  creditcard: PaymentType;\n}\n\nexport interface SupportedPaymentTypesCurrencyResponse {\n  message: SupportedPaymentTypesMessage;\n}\n\nexport interface SupportedDefaultResponse {\n  defaults: {\n    id: {\n      provider: string;\n      paymentMethod: string;\n      /** @format double */\n      amount: number;\n      target: string;\n      source: string;\n    };\n  };\n  recommended: {\n    provider: string;\n    paymentMethod: string;\n    /** @format double */\n    amount: number;\n    target: string;\n    source: string;\n  };\n}\n\nexport interface SupportedAssetResponse {\n  country: string;\n  assets: {\n    crypto: string[];\n    paymentMethods: string[];\n    fiat: string;\n  }[];\n}\n\nexport interface GetSupportedOnRampsResponse {\n  message: {\n    id: string;\n    displayName: string;\n    icons: {\n      png: {\n        '160x160': string;\n        '32x32': string;\n      };\n      svg: string;\n    };\n    icon: string;\n  }[];\n}\n\nexport interface AvailablePaymentMethod {\n  icon: string;\n  name: string;\n  paymentTypeId: string;\n}\n\nexport interface Quote {\n  recommendations: string[];\n  paymentMethod: string;\n  quoteId: string;\n  ramp: string;\n  availablePaymentMethods: AvailablePaymentMethod[];\n  /** @format double */\n  payout: number;\n  /** @format double */\n  transactionFee: number;\n  /** @format double */\n  networkFee: number;\n  /** @format double */\n  rate: number;\n}\n\nexport type Quotes = Quote[];\n\nexport interface SellQuote {\n  recommendations: string[];\n  quoteId: string;\n  paymentMethod: string;\n  ramp: string;\n  /** @format double */\n  payout: number;\n  /** @format double */\n  transactionFee: number;\n  /** @format double */\n  networkFee: number;\n  /** @format double */\n  rate: number;\n}\n\nexport type SellQuotes = SellQuote[];\n\nexport interface TransactionInput {\n  supportedParams: {\n    partnerData: {\n      redirectUrl: {\n        success: string;\n      };\n    };\n    theme: {\n      /** @format double */\n      borderRadius: number | null;\n      cardColor: string;\n      secondaryTextColor: string;\n      primaryTextColor: string;\n      secondaryColor: string;\n      primaryColor: string;\n      themeName: string;\n      isDark: boolean;\n    };\n  };\n  wallet: {\n    address: string;\n  };\n  metaData: {\n    quoteId: string;\n  };\n  originatingHost: string;\n  partnerContext: string;\n  uuid: string;\n  network: string;\n  paymentMethod: string;\n  type: string;\n  /** @format double */\n  amount: number;\n  destination: string;\n  source: string;\n  onramp: string;\n}\n\nexport interface PaymentIntentResponse {\n  metadata?: Record<string, string>;\n  uri?: string;\n  qr_code?: string;\n  status?: string;\n  destination?: string;\n  /** @format double */\n  amount?: number;\n  network?: string;\n  currency?: string;\n  id?: string;\n  message?: string;\n  success: boolean;\n}\n\nexport interface CreatePaymentIntentInput {\n  metadata: Record<string, string>;\n  network?: string;\n  /** @format double */\n  amount: number;\n  currency?: string;\n}\n\nexport interface Block {\n  number: string;\n  hash: string;\n  timestamp: string;\n}\n\nexport interface TriggerOutput {\n  value: any;\n  name: string;\n}\n\nexport interface Log {\n  triggers?: TriggerOutput[];\n  logIndex: string;\n  transactionHash: string;\n  address: string;\n  data: string;\n  topic0: string | null;\n  topic1: string | null;\n  topic2: string | null;\n  topic3: string | null;\n}\n\nexport interface InternalTransaction {\n  from: string | null;\n  to: string | null;\n  value: string | null;\n  transactionHash: string;\n  gas: string | null;\n}\n\nexport interface AbiInput {\n  name: string;\n  type: string;\n  indexed?: boolean;\n  components?: AbiInput[];\n  internalType?: string;\n}\n\nexport interface AbiOutput {\n  name: string;\n  type: string;\n  components?: AbiOutput[];\n  internalType?: string;\n}\n\n/**\n * The abi to parse the log object of the contract\n * @example {}\n */\nexport interface AbiItem {\n  anonymous?: boolean;\n  constant?: boolean;\n  inputs?: AbiInput[];\n  name?: string;\n  outputs?: AbiOutput[];\n  payable?: boolean;\n  stateMutability?: string;\n  type: string;\n  /** @format double */\n  gas?: number;\n}\n\nexport interface IERC20Transfer {\n  transactionHash: string;\n  contract: string;\n  logIndex: string;\n  from: string;\n  to: string;\n  value: string;\n  tokenDecimals: string;\n  tokenName: string;\n  tokenSymbol: string;\n  valueWithDecimals?: string;\n  triggers?: TriggerOutput[];\n}\n\nexport interface IERC20Approval {\n  transactionHash: string;\n  contract: string;\n  logIndex: string;\n  owner: string;\n  spender: string;\n  value: string;\n  tokenDecimals: string;\n  tokenName: string;\n  tokenSymbol: string;\n  valueWithDecimals?: string;\n  triggers?: TriggerOutput[];\n}\n\nexport interface INFTTransfer {\n  transactionHash: string;\n  contract: string;\n  logIndex: string;\n  tokenContractType: string;\n  tokenName: string;\n  tokenSymbol: string;\n  triggers?: TriggerOutput[];\n  operator: string | null;\n  from: string;\n  to: string;\n  tokenId: string;\n  amount: string;\n}\n\nexport interface INativeBalance {\n  address: string;\n  balance: string;\n}\n\nexport interface INFTApprovalERC721 {\n  transactionHash: string;\n  contract: string;\n  logIndex: string;\n  owner: string;\n  approved: string;\n  tokenId: string;\n  tokenContractType: string;\n  tokenName: string;\n  tokenSymbol: string;\n}\n\nexport interface INFTApprovalERC1155 {\n  transactionHash: string;\n  contract: string;\n  logIndex: string;\n  account: string;\n  operator: string;\n  approved: boolean;\n  tokenContractType: string;\n  tokenName: string;\n  tokenSymbol: string;\n}\n\nexport interface IOldNFTApproval {\n  ERC721: INFTApprovalERC721[];\n  ERC1155: INFTApprovalERC1155[];\n}\n\nexport interface INFTApproval {\n  transactionHash: string;\n  contract: string;\n  logIndex: string;\n  tokenContractType: string;\n  tokenName: string;\n  tokenSymbol: string;\n  account: string;\n  operator: string;\n  approvedAll: boolean;\n  tokenId: string | null;\n}\n\nexport interface IWebhook {\n  block: Block;\n  chainId: string;\n  logs: Log[];\n  txs: Transaction[];\n  txsInternal: InternalTransaction[];\n  abi: AbiItem[];\n  /** @format double */\n  retries: number;\n  confirmed: boolean;\n  tag: string;\n  streamId: string;\n  erc20Transfers: IERC20Transfer[];\n  erc20Approvals: IERC20Approval[];\n  nftTransfers: INFTTransfer[];\n  nativeBalances: INativeBalance[];\n  /** @deprecated */\n  nftApprovals: IOldNFTApproval;\n  nftTokenApprovals: INFTApproval[];\n}\n\nexport interface PingResponse {\n  message: string;\n}\n\nexport interface RippleInput {\n  network?: string;\n  private_key?: string;\n}\n\nexport interface RippleTransactionInput {\n  to?: string;\n  /** @format double */\n  value?: number;\n  network?: string;\n  compress?: boolean;\n}\n\nexport interface SolanaInput {\n  network?: string;\n  private_key?: string;\n}\n\nexport interface SolanaTransactionInput {\n  to?: string;\n  /** @format double */\n  value?: number;\n  network?: string;\n  compress?: boolean;\n}\n\nexport interface TronInput {\n  network?: string;\n  private_key?: string;\n}\n\nexport interface TronTransactionInput {\n  to?: string;\n  /** @format double */\n  value?: number;\n  network?: string;\n  compress?: boolean;\n}\n\nexport interface UniswapInput {\n  to?: string;\n  data?: string;\n  input?: string;\n  value?: string;\n  nonce?: string;\n  gas?: string;\n  gasPrice?: string;\n  chain_id?: string;\n  encoding?: string;\n  EOA?: boolean;\n  contract_address?: string;\n  token_id?: string;\n  token_ids?: string;\n  approved?: boolean;\n  broadcast?: boolean;\n  token_a?: string;\n  token_b?: string;\n  amount_a?: string;\n  amount_b?: string;\n}\n"],"mappings":"+WAAA,IAAAA,EAAA,kBAAAC,EAAAD","names":["data_contracts_exports","__toCommonJS"]}